use crate::constants::*;
use serde_repr::{Deserialize_repr, Serialize_repr};

#[derive(Serialize_repr, Deserialize_repr, PartialEq, Debug)]
#[repr(u32)]
pub enum TokenName {
    Throw = T_THROW,
    Include = T_INCLUDE,
    IncludeOnce = T_INCLUDE_ONCE,
    Require = T_REQUIRE,
    RequireOnce = T_REQUIRE_ONCE,
    LogicalOr = T_LOGICAL_OR,
    LogicalXor = T_LOGICAL_XOR,
    LogicalAnd = T_LOGICAL_AND,
    Print = T_PRINT,
    Yield = T_YIELD,
    DoubleArrow = T_DOUBLE_ARROW,
    YieldFrom = T_YIELD_FROM,
    PlusEqual = T_PLUS_EQUAL,
    MinusEqual = T_MINUS_EQUAL,
    MulEqual = T_MUL_EQUAL,
    DivEqual = T_DIV_EQUAL,
    ConcatEqual = T_CONCAT_EQUAL,
    ModEqual = T_MOD_EQUAL,
    AndEqual = T_AND_EQUAL,
    OrEqual = T_OR_EQUAL,
    XorEqual = T_XOR_EQUAL,
    SlEqual = T_SL_EQUAL,
    SrEqual = T_SR_EQUAL,
    PowEqual = T_POW_EQUAL,
    CoalesceEqual = T_COALESCE_EQUAL,
    Coalesce = T_COALESCE,
    BooleanOr = T_BOOLEAN_OR,
    BooleanAnd = T_BOOLEAN_AND,
    AmpersandNotFollowedByVarOrVararg = T_AMPERSAND_NOT_FOLLOWED_BY_VAR_OR_VARARG,
    AmpersandFollowedByVarOrVararg = T_AMPERSAND_FOLLOWED_BY_VAR_OR_VARARG,
    IsEqual = T_IS_EQUAL,
    IsNotEqual = T_IS_NOT_EQUAL,
    IsIdentical = T_IS_IDENTICAL,
    IsNotIdentical = T_IS_NOT_IDENTICAL,
    Spaceship = T_SPACESHIP,
    IsSmallerOrEqual = T_IS_SMALLER_OR_EQUAL,
    IsGreaterOrEqual = T_IS_GREATER_OR_EQUAL,
    Sl = T_SL,
    Sr = T_SR,
    Instanceof = T_INSTANCEOF,
    IntCast = T_INT_CAST,
    DoubleCast = T_DOUBLE_CAST,
    StringCast = T_STRING_CAST,
    ArrayCast = T_ARRAY_CAST,
    ObjectCast = T_OBJECT_CAST,
    BoolCast = T_BOOL_CAST,
    UnsetCast = T_UNSET_CAST,
    Pow = T_POW,
    Clone = T_CLONE,
    Elseif = T_ELSEIF,
    Else = T_ELSE,
    Lnumber = T_LNUMBER,
    Dnumber = T_DNUMBER,
    String = T_STRING,
    NameFullyQualified = T_NAME_FULLY_QUALIFIED,
    NameRelative = T_NAME_RELATIVE,
    NameQualified = T_NAME_QUALIFIED,
    Variable = T_VARIABLE,
    InlineHtml = T_INLINE_HTML,
    EncapsedAndWhitespace = T_ENCAPSED_AND_WHITESPACE,
    ConstantEncapsedString = T_CONSTANT_ENCAPSED_STRING,
    StringVarname = T_STRING_VARNAME,
    NumString = T_NUM_STRING,
    Eval = T_EVAL,
    New = T_NEW,
    Exit = T_EXIT,
    If = T_IF,
    Endif = T_ENDIF,
    Echo = T_ECHO,
    Do = T_DO,
    While = T_WHILE,
    Endwhile = T_ENDWHILE,
    For = T_FOR,
    Endfor = T_ENDFOR,
    Foreach = T_FOREACH,
    Endforeach = T_ENDFOREACH,
    Declare = T_DECLARE,
    Enddeclare = T_ENDDECLARE,
    As = T_AS,
    Switch = T_SWITCH,
    Endswitch = T_ENDSWITCH,
    Case = T_CASE,
    Default = T_DEFAULT,
    Match = T_MATCH,
    Break = T_BREAK,
    Continue = T_CONTINUE,
    Goto = T_GOTO,
    Function = T_FUNCTION,
    Fn = T_FN,
    Const = T_CONST,
    Return = T_RETURN,
    Try = T_TRY,
    Catch = T_CATCH,
    Finally = T_FINALLY,
    Use = T_USE,
    Insteadof = T_INSTEADOF,
    Global = T_GLOBAL,
    Static = T_STATIC,
    Abstract = T_ABSTRACT,
    Final = T_FINAL,
    Private = T_PRIVATE,
    Protected = T_PROTECTED,
    Public = T_PUBLIC,
    Readonly = T_READONLY,
    Var = T_VAR,
    Unset = T_UNSET,
    Isset = T_ISSET,
    Empty = T_EMPTY,
    HaltCompiler = T_HALT_COMPILER,
    Class = T_CLASS,
    Trait = T_TRAIT,
    Interface = T_INTERFACE,
    Enum = T_ENUM,
    Extends = T_EXTENDS,
    Implements = T_IMPLEMENTS,
    Namespace = T_NAMESPACE,
    List = T_LIST,
    Array = T_ARRAY,
    Callable = T_CALLABLE,
    Line = T_LINE,
    File = T_FILE,
    Dir = T_DIR,
    ClassC = T_CLASS_C,
    TraitC = T_TRAIT_C,
    MethodC = T_METHOD_C,
    FuncC = T_FUNC_C,
    NsC = T_NS_C,
    Attribute = T_ATTRIBUTE,
    Inc = T_INC,
    Dec = T_DEC,
    ObjectOperator = T_OBJECT_OPERATOR,
    NullsafeObjectOperator = T_NULLSAFE_OBJECT_OPERATOR,
    Comment = T_COMMENT,
    DocComment = T_DOC_COMMENT,
    OpenTag = T_OPEN_TAG,
    OpenTagWithEcho = T_OPEN_TAG_WITH_ECHO,
    CloseTag = T_CLOSE_TAG,
    Whitespace = T_WHITESPACE,
    StartHeredoc = T_START_HEREDOC,
    EndHeredoc = T_END_HEREDOC,
    DollarOpenCurlyBraces = T_DOLLAR_OPEN_CURLY_BRACES,
    CurlyOpen = T_CURLY_OPEN,
    DoubleColon = T_DOUBLE_COLON,
    NsSeparator = T_NS_SEPARATOR,
    Ellipsis = T_ELLIPSIS,
    BadCharacter = T_BAD_CHARACTER,
}
